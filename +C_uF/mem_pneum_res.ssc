component mem_pneum_res
    nodes
        I = C_uF.C_uF;
    end
    inputs
        f = {0,'Hz'};
        inp = {-1,'1'};
    end
    outputs
        revOut = {-1,'1'};
    end
    annotations
        revOut : Side = right;
        I : Side = top;
        f : Side = top;
        inp : Side = top;
    end
    variables
        p = {0,'Pa'};
        q = {0,'mm^3/s'};
        h_liquid = {0,'mm'};
        p_cent = {0,'Pa'};
        f_dot = {0,'Hz/s'};
        p_Euler = {0,'Pa'};
        V_liquid = {0,'mm^3'};
        fill = {0,'1'};
        % p_pneum = {0,'Pa'};
        V_change = {0,'mm^3'};
        p_mem = {0,'Pa'};
        p_cap = {0,'Pa'};
        % b_height = {0,'mm'};
    end
    parameters
        G = {0,'1'}; %Azimuthal position of the outlet
        init_fill = {0,'1'}; %Initial fill
        d = {0,'mm'}; %Depth
        w = {0,'mm'}; %Width
        anglength = {0,'1'}; %Angle of aperture
        r = {10,'mm'}; %Inner Radius
        R = {10,'mm'}; %Outer Radius
        mem_rad = {8,'mm'}; %Radius of membrane
        mem_thick = {50,'um'}; %Membrane thickness
        Bi_modulus = {2307692.307692308,'Pa'}; %Biaxial modulus
        init_stress = {620000,'Pa'}; %Initial stress of membrane
        theta = {pi/2,'1'}; %Contact angle
    end
    parameters (Access = private)
        r = {0,'mm'};
        p0 = {101325,'Pa'};
        Euler_fill = {0.1,'1'};
        EP = {100,'1/s'};
        V_total = {0,'mm^3'};
        Area = {1,'mm^2'};
        p_vap = {2329.575349457,'Pa'};
        gamma_lg = {0.07275,'Pa*m'};
    end
    function setup
        across(p,I.p);
        through(q,I.q);
        Area = anglength*(pi/360)*(R^2-r^2)
        V_total = Area*d;
        r = abs(l)+dist_to_cent;
        if init_fill >=1
            fill = 1;
            V_liquid = V_total;
        elseif init_fill > 0
            fill = init_fill;
            V_liquid = init_fill*V_total;
        else
            fill = 0;
            V_liquid = 0;
        end
    end
    equations
        fill == V_liquid/V_total;
        f.der == f_dot;
        h_liquid == sqrt(R^2-V_liquid*360/d/anglength/pi);
        p_cent == 0.5*I.density*(R^2-(R-h_liquid)^2)*(2*pi*f)^2 + 0.5*I.density_gas*((r+h_liquid)^2-r^2)*(2*pi*f)^2;
        p_mem == 4*init_stress*mem_thick*(2*V_change/(pi*mem_rad^2))/mem_rad^2 + (8/3)*0.8*Bi_modulus*mem_thick*(2*V_change/(pi*mem_rad^2))^3/mem_rad^4;
        V_change == V_liquid;
        % p_pneum == p0*((V_total+V_change)/((V_total+V_change)-V_liquid))-p0 ;
        if V_liquid > 0
            % p_pneum == p0*((V_total)/((V_total)-V_liquid))-p0 ;
            if f_dot > 0
                if fill > Euler_fill
                    p_Euler.der == EP*(-(G-1)*0.5*(I.density*w*2*pi*r)*f_dot-p_Euler);
                else
                    p_Euler.der == EP*(-(G-1)*0.5*(I.density*w*2*pi*r)*f_dot*(fill/Euler_fill)-p_Euler);
                end
            else
                if fill > Euler_fill
                    p_Euler.der == EP*(-(G+1)*0.5*(I.density*w*2*pi*r)*f_dot-p_Euler);
                else
                    p_Euler.der == EP*(-(G+1)*0.5*(I.density*w*2*pi*r)*f_dot*(fill/Euler_fill)-p_Euler);
                end
            end
            p_cap == gamma_lg*(((2*cos(theta))/w)+((2*cos(theta))/d));
        else
            % p_pneum == p0*(V_total/(V_total-V_liquid))-p0;
            p_Euler.der == -EP*p_Euler;
            p_cap == 0;
        end
        
        if (inp>1) && (fill<1) && (q>0)
            % filling
            V_liquid.der == abs(q);
            revOut == -1;
        elseif (inp>1) && (fill>=1) && (q>0)
            % filled
            V_liquid.der == 0;
            revOut == -1;
        elseif (fill>0) && (q<0)
            % defilling
            V_liquid.der == -abs(q);
            revOut == 2;
        else
            % either emptied or initially empty
            V_liquid.der == 0;
            revOut == -1;
        end

        p + p_cent + p_Euler + p_cap == p_mem;

    end
end
